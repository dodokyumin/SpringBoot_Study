plugins {
	id 'org.springframework.boot' version '2.1.7.RELEASE'
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
	id 'java'
}

group = 'jpabook'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

//lombok으로 생성된 어노테이션 프로세서
configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

//mavenCentral에서 라이브러를 받겠다는 코드
repositories {
	mavenCentral()
}

//Spring initializr.io 에서 설정했던 것들
//build.gradle에서 아래 implementation 코드 한 줄에 필요한 의존 관계 라이브러리들(의존의 의존의...)을 모두 끌어온다.
dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	//캐시도 없애고 리로딩 되게 만들어주는, 변경사항이 있으면 서버 재시동 필요없이 즉각반영 해준다. 해당 파일에서 build -> recompile
	implementation 'org.springframework.boot:spring-boot-devtools'

	//p6spy 쿼리 파라미터 로그 남기는 라이브러리
	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.6.2'

	testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'
	compileOnly 'org.projectlombok:lombok:1.18.20'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok:1.18.20'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}
